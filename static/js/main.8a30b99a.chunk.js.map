{"version":3,"sources":["images/baseline-play_circle_filled-24px.svg","images/baseline-keyboard_arrow_left-24px.svg","services/config.js","services/store.service.js","services/util.service.js","services/httpActions.service.js","services/models/elementPosition.model.js","services/models/movie.model.js","components/movie-list-item/movieListItem.component.js","services/models/review.model.js","components/movie-review/movieReview.component.js","components/movie-review-container/movieReviewContainer.component.js","services/models/trailer.model.js","components/movie-trailer/movieTrailer.component.js","components/movie-trailer-container/movieTrailerContainer.component.js","components/movie-details/movieDetails.component.js","components/movie-list-container/movieListContainer.component.js","components/search-box/searchBox.component.js","components/header/header.component.js","pages/dashboard/dashboard.page.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","SEARCH_INPUT_DELAY","PROVIDER_CONFIGS","YouTube","thumbRoot","thumbExtension","linkRoot","Vimeo","API_ENDPOINTS","MOVIE_IMG_ROOT","EVENTS","store_service","StoreManager","_this","this","Object","classCallCheck","emit","event","data","log","console","emitters","map","callback","onStoreChange","push","getStore","destroyStore","subStringParagraph","paragraph","arguments","length","undefined","toLength","includeDots","dots","substring","getUrlExtension","endPoint","params","match","regex","matchingGroups","exec","stringToReplace","param","getMatchingGroups","forEach","group","replace","urlParameters","keys","key","value","concat","join","getParamsAsString","genericHttpCall","fetchOpt","includeCanceler","httpAborts","store","httpAbort","abort","canceled","abortCancelers","signal","newHttpAbort","AbortController","addNewCanceler","apiUrl","fetch","then","response","json","catch","error","name","Promise","resolve","reject","getNowPlayingMoviesPaged","_ref","page","searchMovie","_ref2","query","getMovieSimilar","_ref3","movie_id","ElementPosition","position","setPosition","top","bottom","right","left","width","height","Movie","movie","backdrop_path","genre_ids","id","title","vote_average","overview","release_date","poster_path","backdropPath","genreIds","voteAverage","releaseDate","posterPath","MovieListItemGhost","react_default","a","createElement","className","MovieListItem","state","genreNames","handleCardClick","e","props","onMovieSelect","getOffset","currentTarget","el","rect","getBoundingClientRect","offsetWidth","offsetHeight","_this2","setGenreNames","genreList","filter","genre","includes","setState","_this$props","size","onClick","style","backgroundImage","getMdPoster","getOverviewDesc","getHumanDate","Component","Review","author","content","url","MovieReviewGhost","MovieReview","_props$review","review","getReviewDescription","canShowMore","href","rel","target","VIEW_STATES","MovieReviewContainer","viewState","reviews","renderLoading","movieReview_component_MovieReviewGhost","renderError","renderNoResults","renderNormal","Fragment","movieReview_component","movieId","total_results","results","re","Trailer","trailer","site","type","provider","MovieTrailerGhost","MovieTrailer","getTrailerThumb","getTrailerLink","src","playerImg","alt","MovieTrailerContainer","trailers","trailerToShowIndex","showAll","newState","movieTrailer_component_MovieTrailerGhost","_this$state","slice","movieTrailer_component","tr","FULL_WIDTH_POSITION","MovieDetails","starterPosition","isFullScreen","timerAnimationIn","timerAnimationOut","handleClose","setTimeout","onMovieDetailsClose","handleOnScroll","_e$currentTarget","scrollHeight","scrollTop","clientHeight","movieList","getNextPage","clearTimeout","_this3","posterCoverSrc","getCover","posterPreviewSrc","getPreviewPoster","onScroll","backIcon","movieTrailerContainer_component","movieReviewContainer_component","movieListContainer_component","fetchType","FETCH_TYPES","SIMILAR_MOVIES","fetchFunc","fetchParams","onRef","ref","SEARCH","NOW_PLAYING","NORMAL_VIEW","LOADING","SERVER_ERROR","NO_RESULTS","INITIAL_STATE","NOW_PLAYING_VIEW","currentPage","totalPages","totalResults","movies","selectedMovie","selectedMoviePosition","GRID_LAYOUT_PATTERN","MovieListContainer","fetchDate","objectSpread","handleFetchSuccess","handleFetchError","toConsumableArray","res","total_pages","handleLoadMore","getMovieSizeFromPattern","index","quotient","moviePosition","deselectMovie","renderSelectedMovie","_this$state2","movieDetails_component","renderGhostLoading","isLoading","movieListItem_component_MovieListItemGhost","movieListItem_component","renderServerError","nextProps","SearchBox","searchQuery","handleSubmit","preventDefault","timer","notifyOnQueryChange","handleOnChange","onQueryChange","onSubmit","autoComplete","placeholder","onChange","Header","headerContentTemplate","searchBox_component","onSearchQueryChange","DashBoardPage","movieQuery","isSearchView","handleOnQueryChange","renderSearchResults","renderNowPlaying","header_component","App","genres","dashboard_page","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8a30b99a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/baseline-play_circle_filled-24px.69e0d645.svg\";","module.exports = __webpack_public_path__ + \"static/media/baseline-keyboard_arrow_left-24px.5434740c.svg\";","export const SEARCH_INPUT_DELAY = 200;\n\nexport const THE_MOVIE_DB_API_KEY = 'bc50218d91157b1ba4f142ef7baaa6a0';\n\nexport const API_ROOT = 'https://api.themoviedb.org/3';\n\nexport const PROVIDER_CONFIGS = {\n    YouTube: {\n        thumbRoot: 'http://i3.ytimg.com/vi/',\n        thumbExtension: '/hqdefault.jpg',\n        linkRoot: 'https://www.youtube.com/watch?v='\n    },\n    Vimeo: {\n        thumbRoot: 'http://b.vimeocdn.com/ts/487/543/',\n        thumbExtension: '.jpg',\n        linkRoot: 'https://vimeo.com/'\n    }\n}\n\nexport const API_ENDPOINTS = {\n    MOVIES_NOW_PLAYING: '/movie/now_playing',\n    GENRE_LIST: '/genre/movie/list',\n    SEARCH: '/search/movie',\n    MOVIE: '/movie/{movie_id}',\n    MOVIE_VIDEOS: '/movie/{movie_id}/videos',\n    MOVIE_REVIEWS: '/movie/{movie_id}/reviews',\n    MOVIE_SIMILAR: '/movie/{movie_id}/similar',\n}\n\nexport const MOVIE_IMG_ROOT = {\n    DETAILS_COVER: 'https://image.tmdb.org/t/p/w1400_and_h450_face/',\n    CARD_COVER: 'https://image.tmdb.org/t/p/w500_and_h282_face/',\n    THUMB: 'https://image.tmdb.org/t/p/w116_and_h174_face/'\n}","\nexport const EVENTS = {\n    GENRE_LIST_RECEIVED: 'GENRE_LIST_RECEIVED',\n    HTTP_ABOARD: 'HTTP_ABOARD'\n}\n\n/**\n * Service that keeping event base data\n * How to user:\n *    1. Add `store.onStoreChange('eventName', callback)` in place that needed \n *      data listener.\n *    2. Broadcast event when data received by `store.emit('eventName', data)` \n */\nclass StoreManager {\n\n    constructor() {\n        this.emitters = {};\n        this.data = {};\n    }\n\n    emit = (event, data, log) => {\n        if (log) {\n            console.log(event, data)\n        }\n\n        // Store event data \n        this.data[event] = data;\n        if (this.emitters[event] == null) {\n            return;\n        }\n        this.emitters[event].map(callback => callback(data));\n    }\n\n    onStoreChange = (event, callback) => {\n        if (!this.emitters[event]) {\n            this.emitters[event] = [];\n        }\n        // Store emitter callback\n        this.emitters[event].push(callback);\n        // Execute callback  if exist data\n        if (this.data[event]) {\n            callback(this.data[event]);\n        }\n        //  Return data anyway\n        return this.data[event];\n    }\n\n    getStore = (event) => {\n        return this.data[event];\n    }\n\n    destroyStore = (event) => {\n        delete this.emitters[event];\n        delete this.data[event];\n    }\n}\n\n/**\n *  Export the instance of StoreManager\n */  \nexport default  new StoreManager();","import { THE_MOVIE_DB_API_KEY, API_ROOT } from './config';\nimport store, { EVENTS } from './store.service';\n\n/**\n * ex.\n *  input: 'hello world', 2, true\n *  output: 'he...'\n */\nexport const subStringParagraph = (paragraph = '', toLength, includeDots) => {\n\n    const canSub = paragraph && toLength && paragraph.length > toLength;\n    if (canSub) {\n        const dots = includeDots ? '...' : '';\n        return paragraph.substring(0, toLength) + dots;\n    }\n\n    return paragraph;\n}\n\n/**\n * ex: input: '{key: value, key2: value2}' output: 'key=value&key2=value2'\n * @param {*} params \n */\nexport const getParamsAsString = (params) => {\n    return Object.keys(params).map(function (key, value) {\n        return `${key}=${params[key]}`\n    }).join(\"&\");\n}\n\n/**\n * This function cancel all stored http abort controllers\n */\nexport const abortCancelers = () => {\n\n    // Get abort data from store\n    let httpAborts = store.getStore(EVENTS.HTTP_ABOARD)\n    // Set empty array if not exist\n    httpAborts = httpAborts ? httpAborts : [];\n    // Cancel all calls including signal canceler \n    httpAborts.map(httpAbort => httpAbort.abort({ canceled: true }));\n    // Save data\n    store.emit(EVENTS.HTTP_ABOARD, httpAborts)\n}\n\n/**\n * @return signal\n */\nexport const addNewCanceler = () => {\n\n    // Get abort data from store\n    let httpAborts = store.getStore(EVENTS.HTTP_ABOARD)\n    // Set empty array if not exist\n    httpAborts = httpAborts ? httpAborts : [];\n    //  Create new canceler \n    const newHttpAbort = new AbortController();\n    // Add a new on to stack \n    httpAborts.push(newHttpAbort);\n    // Save data\n    store.emit(EVENTS.HTTP_ABOARD, httpAborts)\n\n    return newHttpAbort.signal;\n}\n\n/**\n * ex. input: '/movie/{movie_id}/reviews' output: [{stringToReplace: '{movieId}', param: 'movie_id'}]\n * @param {*} endPoint \n */\nexport const getMatchingGroups = (endPoint) => {\n    const regex = /\\{(.*?)\\}/g\n    let matchingGroups = []\n    let match;\n    while (match = regex.exec(endPoint)) {\n        matchingGroups.push({\n            stringToReplace: match[0],\n            param: match[1]\n        });\n    }\n    return matchingGroups;\n};\n\n/**\n * \n * @param {*} endPoint \n * @param {*} params \n */\nexport const getUrlExtension = (endPoint, params) => {\n    //  Get parameters from endpoint that match to template {test}\n    const matchingGroups = getMatchingGroups(endPoint);\n\n    matchingGroups.forEach((group) => {\n        //  check if template parameters exist on params object input \n        if (params[group.param] != null) {\n            //  Change endpoint template with the parameter actual value\n            endPoint = endPoint.replace(group.stringToReplace, params[group.param]);\n            //  Remove it for params object\n            delete params[group.param]\n            //  console.log(`Parameter: ${group.param} exist on template endpoint: ${endPoint}`)\n        }\n        else {\n            // there is no param pass mapped with endpoint string \n            // remove place holder from endpoint\n            endPoint = endPoint.replace('/' + group.stringToReplace, '');\n        }\n    });\n\n    // Convert object parameters to string\n    let urlParameters = getParamsAsString(params);\n\n    urlParameters = urlParameters ? '?' + urlParameters : '';\n\n    return endPoint + urlParameters;\n}\n\n/**\n * Generic http call\n * ex. input: \n *          endpoint= '/movie/{movie_id}', \n *          params={movie_id:1}, \n *          options={includeCanceler:true}\n *  output: Promise\n */\nexport const genericHttpCall = (endPoint, params = {}, options = {}) => {\n\n    let fetchOpt = {};\n    if (options.includeCanceler) {\n        // Abort all http calls with includeCanceler\n        abortCancelers();\n        // Add new canceler \n        const signal = addNewCanceler();\n        //  add signal to fetch opts \n        fetchOpt['signal'] = signal;\n    }\n\n    // Add api_key parameter\n    params['api_key'] = THE_MOVIE_DB_API_KEY;\n    // Get url ext\n    const apiUrl = API_ROOT + getUrlExtension(endPoint, params);\n\n    return fetch(apiUrl, fetchOpt)\n        .then(response => response.json())\n        .catch(error => {\n            //  if error is cancel request by user sent to \n            // error chain with abort = true\n            if (error.name === 'AbortError') {\n                return new Promise((resolve, reject) => {\n                    reject({ abort: true })\n                })\n            }\n            return error.json()\n        })\n}\n","import { API_ENDPOINTS } from './config';\nimport { genericHttpCall } from './util.service';\n\n\n/**\n * \n * @param {page}\n */\nexport const getNowPlayingMoviesPaged = ({ page }) => {\n    return genericHttpCall(API_ENDPOINTS.MOVIES_NOW_PLAYING, { page });\n}\n\n/**\n * Get list\n */\nexport const getGenreList = () => {\n    return genericHttpCall(API_ENDPOINTS.GENRE_LIST);\n}\n\n/**\n * \n * @param {query, page} \n */\nexport const searchMovie = ({ query, page }) => {\n    return genericHttpCall(API_ENDPOINTS.SEARCH, { query, page }, { includeCanceler: true })\n}\n\n/**\n * \n * @param {num} movie_id \n */\nexport const getMovieDetails = (movie_id) => {\n    return genericHttpCall(API_ENDPOINTS.MOVIE, { movie_id })\n}\n\n/**\n * \n * @param {num} movie_id \n */\nexport const getMovieVideos = (movie_id) => {\n    return genericHttpCall(API_ENDPOINTS.MOVIE_VIDEOS, { movie_id })\n}\n\n/**\n * \n * @param {num} movie_id \n */\nexport const getMovieReviews = (movie_id) => {\n    return genericHttpCall(API_ENDPOINTS.MOVIE_REVIEWS, { movie_id })\n}\n\n/**\n * \n * @param {movie_id, page} param0 \n */\nexport const getMovieSimilar = ({ movie_id, page }) => {\n    return genericHttpCall(API_ENDPOINTS.MOVIE_SIMILAR, { movie_id, page })\n}","class ElementPosition {\n\n    /**\n     * \n     * @param {*} position \n     */\n    constructor(position) {\n        this.setPosition(position);\n    }\n\n    /**\n     * \n     * @param {*} position \n     */\n    setPosition({ top, bottom, right, left, width, height }) {\n        this.top = top;\n        this.bottom = bottom;\n        this.right = right;\n        this.left = left;\n        this.width = width;\n        this.height = height;\n    }\n}\n\nexport default ElementPosition;","import { subStringParagraph } from '../util.service';\nimport { MOVIE_IMG_ROOT } from '../config';\n\nclass Movie {\n\n    /**\n     * \n     *\n     *  @param {*} movie \n     */\n    constructor(movie) {\n        const { backdrop_path, genre_ids, id,\n            title, vote_average, overview, release_date, poster_path } = movie;\n        this.data = movie;\n        this.backdropPath = backdrop_path != null ? backdrop_path : poster_path;\n        this.genreIds = genre_ids;\n        this.id = id;\n        this.title = title;\n        this.voteAverage = vote_average;\n        this.overview = overview;\n        this.releaseDate = release_date;\n        this.posterPath = poster_path;\n    }\n\n    getCover() {\n        return MOVIE_IMG_ROOT.DETAILS_COVER + this.backdropPath;\n    }\n\n    getMdPoster() {\n        return MOVIE_IMG_ROOT.CARD_COVER + this.backdropPath;\n    }\n\n    getPreviewPoster() {\n        return MOVIE_IMG_ROOT.THUMB + this.posterPath;\n    }\n\n    getOverviewDesc() {\n        return subStringParagraph(this.overview, 50, true);\n    }\n\n    getHumanDate() {\n        // TODO\n        return this.releaseDate;\n    }\n}\n\nexport default Movie;\n\n","import React, { Component } from 'react';\n\nimport './movieListItem.component.style.scss';\nimport store, { EVENTS } from '../../services/store.service';\nimport ElementPosition from '../../services/models/elementPosition.model';\nimport Movie from '../../services/models/movie.model';\nimport PropTypes from 'prop-types';\n\n/**\n * Name: MovieListItemGhost\n * Description:  Empty movie list item for loading view\n */\nexport const MovieListItemGhost = () => {\n    return (\n        <div className=\"mv-masonry-grid mv-masonry-sm\">\n            <div className=\"mv-card  mv-card-sm mv-card-ghost\">\n                <div className=\"mv-card-poster\"></div>\n                <div className=\"mv-card-content\">\n                    <div className=\"title\"></div>\n                    <div className=\"genre\"></div>\n                </div>\n                <div className=\"mv-card-footer\"></div>\n            </div>\n        </div>\n    )\n}\n\n/**\n * Name: MovieListItem\n * Description: MovieListItem is responsible for the movie representation\n */\nclass MovieListItem extends Component {\n\n\n    state = {\n        genreNames: []\n    }\n\n    componentDidMount() {\n        store.onStoreChange(EVENTS.GENRE_LIST_RECEIVED,\n            (data) => {\n                this.setGenreNames(data)\n            })\n    }\n\n    handleCardClick = (e) => {\n        this.props.onMovieSelect(this.props.movie, this.getOffset(e.currentTarget));\n    }\n\n    setGenreNames(genreList) {\n        const { genreIds } = this.props.movie;\n        const genreNames = genreList.filter((genre) => {\n            return genreIds.includes(genre.id);\n        }).map(genre => genre.name);\n        this.setState({ genreNames });\n    }\n\n    getOffset = (el) => {\n        const rect = el.getBoundingClientRect();\n        return new ElementPosition({\n            top: rect.top,\n            left: rect.left,\n            right: rect.left + el.offsetWidth,\n            bottom: rect.top + el.offsetHeight,\n            width: el.offsetWidth,\n            height: el.offsetHeight\n        })\n    }\n\n    render() {\n\n        const {size, movie} = this.props;\n        const genre = this.state.genreNames.join(\", \");\n\n        return (\n            <div\n                className={`mv-masonry-grid mv-masonry-${size}`} title={movie.overview}>\n                <div\n                    onClick={this.handleCardClick}\n                    className={`mv-card  mv-card-${size}`}>\n                    <div className=\"mv-card-poster\"\n                        style={{ backgroundImage: `url(${movie.getMdPoster()})` }}>\n                    </div>\n                    <div className=\"mv-card-content\">\n                        <div className=\"title\">\n                            {movie.title}\n                        </div>\n                        <div className=\"genre\">\n                            {genre}\n                        </div>\n                        <div className=\"overview\">\n                            {movie.getOverviewDesc()}\n                        </div>\n                    </div>\n                    <div className=\"mv-card-footer\">\n                        <div className=\"md-block-left\">\n                            {movie.getHumanDate()}\n                        </div>\n                        <div className=\"md-block-right text-right\">\n                            Rate: {movie.voteAverage}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nMovieListItem.propTypes = {\n    size: PropTypes.string,\n    onMovieSelect: PropTypes.func.isRequired,\n    movie: PropTypes.instanceOf(Movie)\n}\n\n\nexport default MovieListItem;","import {subStringParagraph} from '../util.service';\n\nconst MAX_REVIEW_CONTENT = 250;\n\nclass Review {\n    constructor({ author, content, id, url }) {\n        this.author = author;\n        this.content = content;\n        this.id = id;\n        this.url = url;\n    }\n    getReviewDescription() {\n        return subStringParagraph(this.content,  MAX_REVIEW_CONTENT);\n    }\n\n    canShowMore() {\n        return this.content && this.content.length > MAX_REVIEW_CONTENT;\n    }\n}\n\nexport default Review;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Review from '../../services/models/review.model';\nimport './movieReview.component.style.scss';\n\nexport const MovieReviewGhost = () => {\n    return (\n        <div className=\"md-paragraph movie-review ghost\">\n            <div className=\"movie-review-author\">\n            </div>\n            <div className=\"movie-review-content\">\n            </div>\n        </div>\n    )\n}\n\nconst MovieReview = (props) => {\n\n    const  {author, url} = props.review;\n    const review = props.review;\n  \n    return (\n        <div className=\"md-paragraph movie-review\">\n            <div className=\"movie-review-author\">\n                <i> {author}</i>\n            </div>\n            <div className=\"movie-review-content\">\n                {review.getReviewDescription()}\n                {review.canShowMore() ? (<a href={url} rel=\"noopener noreferrer\" target='_blank'>...</a>) : null}\n            </div>\n        </div>\n    )\n}\n\nMovieReview.propTypes = {\n    review: PropTypes.instanceOf(Review)\n}\n\nexport default MovieReview;","import React, { Component } from 'react';\nimport MovieReview, {MovieReviewGhost} from '../movie-review/movieReview.component';\nimport { getMovieReviews } from '../../services/httpActions.service';\nimport Review from '../../services/models/review.model';\nimport PropTypes from 'prop-types'\n\nconst VIEW_STATES = {\n    LOADING: 0,\n    SERVER_ERROR: 1,\n    NORMAL: 2,\n    NO_RESULTS: 3\n}\n\nclass MovieReviewContainer extends Component {\n\n    state = {\n        viewState: null,\n        reviews: null\n    }\n\n    componentWillMount() {\n\n        this.setState({ viewState: VIEW_STATES.LOADING });\n        getMovieReviews(this.props.movieId).then(\n            response => {\n                if (response.total_results > 0) {\n                    this.setState({ \n                        viewState: VIEW_STATES.NORMAL, \n                        reviews: response.results.map(re => new Review(re)) \n                    })\n                }\n                else {\n                    this.setState({ viewState: VIEW_STATES.NO_RESULTS })\n                }\n            }\n        ).catch(\n            error => {\n                console.log(error)\n                this.setState({ viewState: VIEW_STATES.SERVER_ERROR });\n            }\n        )\n    }\n\n\n    renderLoading = () => {\n        return (\n            <div className=\"md-paragraph\">\n                <MovieReviewGhost></MovieReviewGhost>\n            </div>\n        )\n    }\n\n    renderError = () => {\n        return (\n            <div className=\"md-paragraph\">\n                Server error..\n            </div>\n        )\n    }\n\n    renderNoResults = () => {\n        return (\n            <div className=\"md-paragraph\">\n                No reviews found for this movie.\n            </div>\n        )\n    }\n\n    renderNormal = () => {\n        const { reviews } = this.state;\n        return (\n            <React.Fragment>\n                {reviews ? reviews.map(review => (\n                    <MovieReview key={review.id} review={review}></MovieReview>)\n                ) : null}\n            </React.Fragment>\n        )\n    }\n\n    render() {\n        const { viewState } = this.state\n        if (viewState === VIEW_STATES.LOADING) {\n            return this.renderLoading();\n        }\n        if (viewState === VIEW_STATES.NO_RESULTS) {\n            return this.renderNoResults();\n        }\n        if (viewState === VIEW_STATES.SERVER_ERROR) {\n            return this.renderError();\n        }\n        if (viewState === VIEW_STATES.NORMAL) {\n            return this.renderNormal();\n        }\n    }\n}\n\nMovieReviewContainer.propTypes = {\n    movieId: PropTypes.number.isRequired\n}\n\nexport default MovieReviewContainer;","import {PROVIDER_CONFIGS} from '../config'; \n\nclass Trailer {\n\n    constructor(trailer) {\n        const { id, key, site, type } = trailer;\n\n        this.id = id;\n        this.type = type;\n        this.site = site;\n        this.key = key;\n        this.provider = PROVIDER_CONFIGS[this.site];\n    }\n\n    isYouTubeVideo() {\n        return this.site === \"YouTube\";\n    }\n\n    isVimeoVideo() {\n        return this.site === \"Vimeo\";\n    }\n\n    getTrailerLink() {\n        return this.provider ? this.provider.linkRoot + this.key : '';\n    }\n\n    getTrailerThumb() {\n        return this.provider ? this.provider.thumbRoot + this.key + this.provider.thumbExtension: '';\n\n    }\n\n}\n\nexport default Trailer;","import React from 'react';\nimport './movieTrailer.component.style.scss'\nimport playerImg from '../../images/baseline-play_circle_filled-24px.svg'\nimport Trailer from '../../services/models/trailer.model';\nimport PropTypes from 'prop-types';\n\nexport const MovieTrailerGhost = () => {\n    return (\n        <div className=\"movie-trailer ghost\">\n        </div>\n    )\n}\n\nconst MovieTrailer = (props) => {\n\n    const trailer = props.trailer;\n\n    return (\n        <div className=\"movie-trailer\" style={{ backgroundImage: `url(${trailer.getTrailerThumb()})` }}>\n            <div className=\"overlay\"></div>\n            <div className=\"content\">\n                <a href={trailer.getTrailerLink()} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img src={playerImg} alt=\"play video\" />\n                </a>\n            </div>\n        </div>\n    )\n\n}\n\nMovieTrailer.propTypes = {\n    trailer: PropTypes.instanceOf(Trailer)\n}\n\nexport default MovieTrailer;\n\n","import React, { Component } from 'react';\nimport { getMovieVideos } from '../../services/httpActions.service';\nimport MovieTrailer, { MovieTrailerGhost } from '../movie-trailer/movieTrailer.component';\nimport PropTypes from 'prop-types';\nimport Trailer from '../../services/models/trailer.model';\nimport \"./movieTrailerContainer.component.style.scss\"\n\nconst VIEW_STATES = {\n    LOADING: 0,\n    SERVER_ERROR: 1,\n    NORMAL: 2,\n    NO_RESULTS: 3\n}\n\nclass MovieTrailerContainer extends Component {\n\n    state = {\n        viewState: null,\n        trailers: null,\n        trailerToShowIndex: 2,\n        canShowMore: false\n    }\n\n    componentWillMount() {\n\n        this.setState({ viewState: VIEW_STATES.LOADING })\n        getMovieVideos(this.props.movieId).then(\n            response => {\n                if (response.results && response.results.length === 0) {\n                    return this.setState({ viewState: VIEW_STATES.NO_RESULTS })\n                }\n\n                let canShowMore;\n                if (response.results && response.results.length > this.state.trailerToShowIndex) {\n                    canShowMore = true;\n                }\n                return this.setState({\n                    viewState: VIEW_STATES.NORMAL,\n                    trailers: response.results.map(tr=> new Trailer(tr)),\n                    canShowMore\n                })\n            }\n        ).catch(\n            error => {\n                return this.setState({ viewState: VIEW_STATES.SERVER_ERROR })\n            }\n        )\n    }\n\n    showAll = () => {\n        const { trailers } = this.state;\n        const newState = {\n            canShowMore: false,\n            trailerToShowIndex: trailers.length\n        }\n        this.setState(newState)\n    }\n\n    renderLoading = () => {\n        //  Preview on ghost movie trailer\n        return (\n            <MovieTrailerGhost></MovieTrailerGhost>\n        );\n    }\n\n\n    renderNormal = () => {\n        const { trailers, canShowMore, trailerToShowIndex } = this.state;\n        return (\n            <React.Fragment>\n\n                <div className=\"movie-trailer-container\">\n                    {trailers ? trailers.slice(0, trailerToShowIndex).map(trailer => (\n                        <MovieTrailer trailer={trailer} key={trailer.id}></MovieTrailer>\n                    )\n                    ) : null}\n                </div>\n                <div className=\"clear-fix\"></div>\n                <div className=\"md-container\">\n                    {canShowMore ? (<button className=\"md-button-primary\" onClick={this.showAll}>Show all</button>) : null}\n                </div>\n\n            </React.Fragment>\n\n\n        );\n    }\n\n    renderError = () => {\n        return (<div className=\"md-paragraph\">Server error</div>);\n    }\n\n    renderNoResults = () => {\n        return (<div className=\"md-paragraph\">No video trails for this movie</div>);\n\n    }\n\n    render() {\n        const { viewState } = this.state\n        if (viewState === VIEW_STATES.LOADING) {\n            return this.renderLoading();\n        }\n        if (viewState === VIEW_STATES.NO_RESULTS) {\n            return this.renderNoResults();\n        }\n        if (viewState === VIEW_STATES.SERVER_ERROR) {\n            return this.renderError();\n        }\n        if (viewState === VIEW_STATES.NORMAL) {\n            return this.renderNormal();\n        }\n        return;\n    }\n}\n\nMovieTrailerContainer.propTypes = {\n    movieId: PropTypes.number.isRequired\n}\n\nexport default MovieTrailerContainer;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Movie from '../../services/models/movie.model';\nimport ElementPosition from '../../services/models/elementPosition.model';\n\n\nimport MovieReviewContainer from '../movie-review-container/movieReviewContainer.component';\nimport MovieListContainer, { FETCH_TYPES } from '../movie-list-container/movieListContainer.component';\nimport { getMovieSimilar } from '../../services/httpActions.service';\nimport MovieTrailerContainer from '../movie-trailer-container/movieTrailerContainer.component';\nimport backIcon from '../../images/baseline-keyboard_arrow_left-24px.svg'\nimport './movieDetails.component.style.scss';\n\nconst FULL_WIDTH_POSITION = {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n}\n\nclass MovieDetails extends Component {\n\n    state = {\n        position: null,\n        starterPosition: null,\n        movie: null,\n        isFullScreen: false\n    }\n\n    timerAnimationIn = null;\n\n    timerAnimationOut = null;\n\n    componentWillMount() {\n\n        this.setState({\n            starterPosition: this.props.starterPosition,\n            position: this.props.starterPosition,\n            movie: this.props.movie\n\n        })\n\n        this.timerAnimationIn = setTimeout(() => this.setState({\n            position: new ElementPosition(FULL_WIDTH_POSITION),\n            isFullScreen: true\n        }))\n    }\n\n    componentWillUnmount() {\n        //  Clear animation timers\n        clearTimeout(this.timerAnimationIn);\n        clearTimeout(this.timerAnimationOut);\n    }\n\n\n    handleClose = (e) => {\n        this.setState({\n            position: this.state.starterPosition,\n            isFullScreen: false\n        })\n        this.timerAnimationOut = setTimeout(() => this.props.onMovieDetailsClose(), 200);\n\n    }\n\n    handleOnScroll = (e) => {\n        const { scrollHeight, scrollTop, clientHeight } = e.currentTarget;\n        if (scrollHeight - scrollTop === clientHeight) {\n            if (this.movieList) {\n                this.movieList.getNextPage();\n            }\n        }\n    }\n\n\n    render() {\n        const { position, movie, isFullScreen } = this.state;\n        const posterCoverSrc = movie.getCover();\n        const posterPreviewSrc = movie.getPreviewPoster();\n        return (\n            <div\n                style={position}\n                className=\"mv-details-container\">\n\n                <div className=\"md-page-container\" onScroll={this.handleOnScroll}>\n\n                    <div className=\"mv-details-header\">\n                        <div className=\"md-container\">\n                            <button className=\"md-button\" onClick={this.handleClose}>\n                                <img src={backIcon} alt=\"back\" />\n\n                            </button>\n                            <div className=\"mv-details-header-title\">\n                                {movie.title}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        className=\"mv-details-poster\"\n                        style={{ backgroundImage: `url(${posterCoverSrc})` }}>\n                    </div>\n                    <div className=\"md-container mv-details-content-card\">\n\n                        <div className={`mv-details-movie-content ${isFullScreen ? 'show' : 'hide'}`}>\n                            <div className=\"md-container no-gutters\">\n                                <div className=\"poster-preview-container\">\n                                    <img src={posterPreviewSrc} alt={movie.title} />\n                                </div>\n\n                                <div className=\"md-title\">\n                                    {movie.title}\n                                </div>\n                                <div className=\"md-sub-title\">\n                                    Overview\n                                </div>\n                                <div className=\"md-paragraph\">\n                                    {movie.overview}\n                                </div>\n\n                                <div className=\"md-paragraph sub-info\">\n                                    {movie.getHumanDate()}, Rating {movie.voteAverage}\n                                </div>\n\n\n                                <div className=\"md-sub-title\">\n                                    Trailers\n                                </div>\n                                <div className=\"horizontal-container\">\n                                    <MovieTrailerContainer movieId={movie.id}></MovieTrailerContainer>\n                                </div>\n                                <div className=\"md-sub-title\">\n                                    Reviews\n                                </div>\n                                <div>\n                                    <MovieReviewContainer movieId={movie.id}></MovieReviewContainer>\n                                </div>\n                                <div className=\"md-sub-title\">\n                                    Similar movies\n                                </div>\n                            </div>\n                            <MovieListContainer\n                                fetchType={FETCH_TYPES.SIMILAR_MOVIES}\n                                fetchFunc={getMovieSimilar}\n                                fetchParams={{ movie_id: movie.id }}\n                                onRef={ref => (this.movieList = ref)}></MovieListContainer>\n\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nMovieDetails.propTypes = {\n    movie: PropTypes.instanceOf(Movie),\n    starterPosition: PropTypes.instanceOf(ElementPosition),\n    onMovieDetailsClose: PropTypes.func.isRequired\n}\n\nexport default MovieDetails;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport MovieListItem, { MovieListItemGhost } from '../movie-list-item/movieListItem.component';\nimport MovieDetails from '../movie-details/movieDetails.component';\nimport Movie from '../../services/models/movie.model';\n\n// Export fetch types\nexport const FETCH_TYPES = {\n    SEARCH: 'SEARCH',\n    NOW_PLAYING: 'NOW_PLAYING',\n    SIMILAR_MOVIES: 'SIMILAR_MOVIES',\n}\n\n/**\n * Available view states\n */\nconst VIEW_STATES = {\n    NORMAL_VIEW: 0,\n    LOADING: 1,\n    SERVER_ERROR: 4,\n    NO_RESULTS: 5\n}\n\n/**\n * Initial state\n */\nconst INITIAL_STATE = {\n    viewState: VIEW_STATES.NOW_PLAYING_VIEW,\n    currentPage: 1,\n    totalPages: null,\n    totalResults: null,\n    movies: [],\n    selectedMovie: null,\n    selectedMoviePosition: null\n}\n\nconst GRID_LAYOUT_PATTERN = [\n    'lg',\n    'sm',\n    'sm',\n    'sm',\n    'sm',\n    'sm',\n    'md'\n];\n\n/**\n * \n * Name: MovieListContainer\n * Description: This Component is responsible for movie list \n * representation \n * \n */\nclass MovieListContainer extends Component {\n\n\n    //  Set up initial state\n    state = INITIAL_STATE;\n\n    // On component mount execute http request\n    componentDidMount() {\n        this.props.onRef(this)\n        this.fetchDate();\n    }\n\n    componentWillUnmount() {\n        this.props.onRef(null)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState(INITIAL_STATE, () => this.fetchDate());\n    }\n\n    // This function execute http request\n    fetchDate = () => {\n        //  set loading view state\n        this.setState({ viewState: VIEW_STATES.LOADING });\n        //  compose fetch parameters\n        const params = { ...this.props.fetchParams, page: this.state.currentPage }\n        //  Execute fetch\n        this.props.fetchFunc(params)\n            .then(this.handleFetchSuccess)\n            .catch(this.handleFetchError)\n    }\n\n    handleFetchSuccess = response => {\n\n        //  Set no results view state\n        if (response.total_results === 0) {\n            return this.setState({ viewState: VIEW_STATES.NO_RESULTS })\n        }\n        //  Set Normal view\n        const movies = [\n            ...this.state.movies,\n            ...response.results.map(res => new Movie(res))];\n\n        this.setState({\n            movies,\n            totalResults: response.total_results,\n            totalPages: response.total_pages,\n            viewState: VIEW_STATES.NORMAL_VIEW\n        })\n    }\n\n    handleFetchError = error => {\n        // If request canceled by user return\n        if (error.abort) {\n            return;\n        }\n        //  Set view state to server error\n        this.setState({\n            viewState: VIEW_STATES.SERVER_ERROR\n        })\n    }\n\n    //  Increase currentPage and execute http fetchDate\n    getNextPage = () => {\n        const { totalPages, currentPage } = this.state;\n        //  Check if exist next page first\n        if (totalPages && currentPage >= totalPages) {\n            //  No results to show\n            return;\n        }\n        //  Set currentPage on state and execute fetchDate \n        this.setState((state, props) => ({\n            currentPage: state.currentPage + 1,\n        }), () => {\n            this.fetchDate();\n        })\n    }\n\n    // Handle load more movies\n    handleLoadMore = (e) => {\n        this.getNextPage();\n    }\n\n    getMovieSizeFromPattern = (index) => {\n        const quotient = (index % GRID_LAYOUT_PATTERN.length);\n        return GRID_LAYOUT_PATTERN[quotient];\n    }\n\n    onMovieSelect = (movie, moviePosition) => {\n        this.setState({\n            selectedMovie: movie,\n            selectedMoviePosition: moviePosition\n        })\n    }\n\n    deselectMovie = () => {\n        this.setState({\n            selectedMovie: INITIAL_STATE.selectedMovie,\n            selectedMoviePosition: INITIAL_STATE.selectedMoviePosition\n        })\n    }\n\n    renderSelectedMovie = () => {\n        const { selectedMovie, selectedMoviePosition } = this.state;\n        if (selectedMovie !== null) {\n            return (\n                <MovieDetails\n                    movie={selectedMovie}\n                    starterPosition={selectedMoviePosition}\n                    onMovieDetailsClose={this.deselectMovie}>\n                </MovieDetails>\n            )\n        }\n        return null;\n    }\n\n    renderGhostLoading = (isLoading) => {\n        if (isLoading) {\n            return (GRID_LAYOUT_PATTERN.map((size, key) => (\n                <MovieListItemGhost key={key}></MovieListItemGhost>))\n            )\n        }\n        return null;\n    }\n\n    renderNormal = (isLoading) => {\n\n        const { movies } = this.state;\n\n        return (\n            <React.Fragment>\n\n                {this.renderSelectedMovie()}\n\n                <div className=\"md-container no-gutters\">\n                    <div className=\"md-list\">\n                        {movies.map(\n                            (movie, key) => {\n                                return (\n                                    <MovieListItem\n                                        onMovieSelect={this.onMovieSelect}\n                                        size={this.getMovieSizeFromPattern(key)}\n                                        movie={movie}\n                                        key={key}></MovieListItem>\n                                )\n                            }\n                        )}\n\n                        {this.renderGhostLoading(isLoading)}\n\n\n                        <div className=\"clear-fix\"></div>\n                    </div>\n                </div>\n                {isLoading ? (<div className=\"text-center\">\n                    <button className=\"md-button\" onClick={this.handleLoadMore}>Loading...</button>\n                </div>) : null}\n\n            </React.Fragment>\n\n        );\n    }\n    renderServerError = () => {\n        return (\n            <div className=\"md-container no-gutters\">\n                <div className=\"md-paragraph\">\n                    Server Error! Something went wrong. Please try again later..\n                </div>\n            </div>\n        )\n    }\n    renderNoResults = () => {\n        return (\n            <div className=\"md-container no-gutters\">\n                <div className=\"md-paragraph\">\n                    No results Found...\n                </div>\n            </div>\n        )\n    }\n\n\n    render() {\n\n        const { viewState } = this.state;\n\n        // Server error state\n        if (viewState === VIEW_STATES.SERVER_ERROR) {\n            return this.renderServerError()\n        }\n        // No results state\n        if (viewState === VIEW_STATES.NO_RESULTS) {\n            return this.renderNoResults();\n        }\n\n        // Normal state\n        return this.renderNormal(viewState === VIEW_STATES.LOADING);\n    }\n}\n\nMovieListContainer.propTypes = {\n    fetchType: PropTypes.string,\n    fetchFunc: PropTypes.func.isRequired,\n    fetchParams: PropTypes.object\n}\n\n\nexport default MovieListContainer;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './searchBox.component.style.scss';\nimport {SEARCH_INPUT_DELAY} from  '../../services/config';\n\n\n/**\n * Name: SearchBox\n * Description: Search box is responsible to handle input changes\n */\nclass SearchBox extends Component {\n\n    state = {\n        searchQuery: \"\"\n    }\n\n    timer;\n\n    componentWillUnmmount(){\n        clearTimeout(this.timer);\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        clearTimeout(this.timer);\n        this.notifyOnQueryChange();\n    }\n\n    handleOnChange = (e) => {\n\n        clearTimeout(this.timer);\n        this.setState({\n            searchQuery: e.target.value\n        }, () => this.timer = setTimeout(this.notifyOnQueryChange, SEARCH_INPUT_DELAY))\n    }\n\n    notifyOnQueryChange = () => {\n        this.props.onQueryChange(this.state.searchQuery);\n    }\n\n    render() {\n        const { searchQuery } = this.state;\n        return (\n            <form className=\"search-box-form\" onSubmit={this.handleSubmit}>\n\n                <input\n                    className=\"md-input search-box\"\n                    autoComplete=\"off\"\n                    placeholder=\"Search for a movie, tv show, person...\"\n                    onChange={this.handleOnChange}\n                    type=\"text\"\n                    id=\"searchQuery\"\n                    value={searchQuery} />\n            </form>\n        )\n    }\n}\n\nSearchBox.propTypes = {\n    onQueryChange: PropTypes.func.isRequired\n}\n\nexport default SearchBox;","import React from 'react';\nimport './header.component.style.scss';\nimport SearchBox from '../search-box/searchBox.component';\nimport PropTypes from 'prop-types';\n\n/**\n * Name: Header\n * Description: Header component is responsible for brand name and search \n * box representation \n * @param {*} props \n */\nconst Header = (props) => {\n\n    const headerContentTemplate = (\n        <div>\n            <div className=\"brand-name\">\n                MovieRama\n            </div>\n            <SearchBox onQueryChange={props.onSearchQueryChange}></SearchBox>\n        </div>\n    )\n    \n    return (\n        <div className=\"md-header header-component-container\">\n            {headerContentTemplate}\n            <div className=\"md-header-content-fixed header-component-container-fixed\">\n                <div className=\"md-container\">\n                    {headerContentTemplate}\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nHeader.propTypes = {\n    onSearchQueryChange: PropTypes.func.isRequired\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { getNowPlayingMoviesPaged, searchMovie } from '../../services/httpActions.service';\nimport MovieListContainer, { FETCH_TYPES } from '../../components/movie-list-container/movieListContainer.component'\nimport Header from '../../components/header/header.component';\n\nclass DashBoardPage extends Component {\n\n    state = {\n        movieQuery: '',\n        isSearchView: false\n    }\n\n    handleOnQueryChange = (movieQuery) => {\n        const isSearchView = movieQuery != null && movieQuery !== \"\";\n        this.setState({ movieQuery, isSearchView });\n    }\n\n\n    handleOnScroll = (e) => {\n        const { scrollHeight, scrollTop, clientHeight } = e.currentTarget;\n        if (scrollHeight - scrollTop === clientHeight) {\n            if (this.movieList && typeof this.movieList.getNextPage === \"function\") {\n                this.movieList.getNextPage()\n            }\n        }\n    }\n\n    renderSearchResults = () => {\n        const { movieQuery } = this.state;\n        return (\n            <React.Fragment>\n                <div className=\"md-container no-gutters\">\n                    <div className=\"md-sub-title\">\n                        Search for <i>'{movieQuery}'</i>\n                    </div>\n                </div>\n                <MovieListContainer\n                    fetchType={FETCH_TYPES.SEARCH}\n                    fetchFunc={searchMovie}\n                    fetchParams={{ query: movieQuery }}\n                    onRef={ref => (this.movieList = ref)}></MovieListContainer>\n            </React.Fragment>)\n    }\n\n    renderNowPlaying = () => {\n        return (\n            <React.Fragment>\n                <div className=\"md-container no-gutters\">\n                    <div className=\"md-sub-title\">Now In Theaters</div>\n                </div>\n                <MovieListContainer\n                    fetchType={FETCH_TYPES.NOW_PLAYING}\n                    fetchFunc={getNowPlayingMoviesPaged}\n                    fetchParams={{}}\n                    onRef={ref => (this.movieList = ref)}></MovieListContainer>\n            </React.Fragment>\n        )\n    }\n\n    render() {\n\n        const { isSearchView } = this.state;\n        return (\n            <div className=\"md-page-container\" onScroll={this.handleOnScroll}>\n                <Header onSearchQueryChange={this.handleOnQueryChange}></Header>\n\n                {isSearchView === true ? this.renderSearchResults() : null}\n                {isSearchView === false ? this.renderNowPlaying() : null}\n            </div>\n        )\n    }\n}\n\nexport default DashBoardPage;","import React, { Component } from 'react';\n\nimport DashBoardPage from './pages/dashboard/dashboard.page.js';\nimport {getGenreList} from './services/httpActions.service';\nimport store, { EVENTS } from './services/store.service';\n/**\n * Name: App\n * Description: App is main component \n */\nclass App extends Component {\n\n  componentDidMount() {\n    getGenreList().then(response => {\n      store.emit(EVENTS.GENRE_LIST_RECEIVED, response.genres);\n    })\n  }\n\n  render() {\n\n    return (\n      <React.Fragment>\n        <DashBoardPage></DashBoardPage>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}