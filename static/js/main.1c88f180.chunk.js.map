{"version":3,"sources":["images/baseline-play_circle_filled-24px.svg","images/baseline-keyboard_arrow_left-24px.svg","services/config.js","services/httpHelper.service.js","services/httpActions.service.js","services/store.service.js","services/models/elementPosition.model.js","services/models/movie.model.js","components/movie-list-item/movieListItem.component.js","services/models/review.model.js","components/movie-review/movieReview.component.js","components/movie-review-container/movieReviewContainer.component.js","services/models/trailer.model.js","components/movie-trailer/movieTrailer.component.js","components/movie-trailer-container/movieTrailerContainer.component.js","components/movie-details/movieDetails.component.js","components/movie-list-container/movieListContainer.component.js","components/search-box/searchBox.component.js","components/header/header.component.js","pages/dashboard/dashboard.page.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","API_ENDPOINTS","httpAborts","genericHttpCall","endPoint","params","arguments","length","undefined","fetchOpt","includeCanceler","map","httpAbort","abort","signal","newHttpAbort","AbortController","push","addNewCanceler","match","regex","matchingGroups","exec","stringToReplace","param","getMatchingGroups","forEach","group","replace","console","error","concat","urlParameters","Object","keys","key","value","join","getParamsAsString","fetch","then","response","json","catch","getNowPlayingMoviesPaged","_ref","page","searchMovie","_ref2","query","getMovieSimilar","_ref3","movie_id","EVENTS","store","StoreManager","_this","this","classCallCheck","emit","event","data","log","emitters","callback","onStoreChange","destroyStore","ElementPosition","position","setPosition","top","bottom","right","left","width","height","Movie","movie","backdrop_path","genre_ids","id","title","vote_average","overview","release_date","poster_path","backdropPath","genreIds","voteAverage","releaseDate","posterPath","showMore","substring","MovieListItemGhost","react_default","a","createElement","className","MovieListItem","state","genreNames","handleCardClick","e","props","onMovieSelect","getOffset","currentTarget","el","rect","getBoundingClientRect","offsetWidth","offsetHeight","_this2","setGenreNames","genreList","filter","genre","includes","name","setState","_this$props","size","onClick","style","backgroundImage","getMdPoster","getOverviewDesc","getHumanDate","Component","Review","author","content","url","MovieReviewGhost","MovieReview","_props$review","review","getReviewDescription","canShowMore","href","rel","target","VIEW_STATES","MovieReviewContainer","viewState","reviews","renderLoading","movieReview_component_MovieReviewGhost","renderError","renderNoResults","renderNormal","Fragment","movieReview_component","movieId","total_results","results","re","Trailer","trailer","site","type","isYouTubeVideo","isVimeoVideo","MovieTrailerGhost","MovieTrailer","getTrailerThumb","getTrailerLink","src","playerImg","alt","MovieTrailerContainer","trailers","trailerToShowIndex","showAll","newState","movieTrailer_component_MovieTrailerGhost","_this$state","slice","movieTrailer_component","tr","FULL_WIDTH_POSITION","MovieDetails","starterPosition","isFullScreen","timerAnimationIn","timerAnimationOut","handleClose","setTimeout","onMovieDetailsClose","handleOnScroll","_e$currentTarget","scrollHeight","scrollTop","clientHeight","movieList","getNextPage","clearTimeout","_this3","posterCoverSrc","getCover","posterPreviewSrc","getPreviewPoster","onScroll","backIcon","movieTrailerContainer_component","movieReviewContainer_component","movieListContainer_component","fetchType","FETCH_TYPES","SIMILAR_MOVIES","fetchFunc","fetchParams","onRef","ref","SEARCH","NOW_PLAYING","NORMAL_VIEW","LOADING","SERVER_ERROR","NO_RESULTS","INITIAL_STATE","NOW_PLAYING_VIEW","currentPage","totalPages","totalResults","similarMovieId","movies","selectedMovie","selectedMoviePosition","GRID_LAYOUT_PATTERN","MovieListContainer","fetchDate","objectSpread","handleFetchSuccess","handleFetchError","toConsumableArray","res","total_pages","handleLoadMore","getMovieSizeFromPattern","index","quotient","moviePosition","deselectMovie","renderSelectedMovie","_this$state2","movieDetails_component","renderGhostLoading","isLoading","movieListItem_component_MovieListItemGhost","movieListItem_component","renderServerError","nextProps","DELAY","SearchBox","searchQuery","handleSubmit","preventDefault","timer","notifyOnQueryChange","handleOnChange","onQueryChange","onSubmit","autoComplete","placeholder","onChange","Header","headerContentTemplate","searchBox_component","onSearchQueryChange","DashBoardPage","movieQuery","isSearchView","handleOnQueryChange","renderSearchResults","renderNowPlaying","header_component","App","genres","dashboard_page","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1c88f180.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/baseline-play_circle_filled-24px.69e0d645.svg\";","module.exports = __webpack_public_path__ + \"static/media/baseline-keyboard_arrow_left-24px.5434740c.svg\";","export const THE_MOVIE_DB_API_KEY = 'bc50218d91157b1ba4f142ef7baaa6a0';\n\nexport const API_ROOT = 'https://api.themoviedb.org/3';\n\nexport const API_ENDPOINTS = {\n    MOVIES_NOW_PLAYING: '/movie/now_playing',\n    GENRE_LIST: '/genre/movie/list',\n    SEARCH: '/search/movie',\n    MOVIE: '/movie/{movie_id}',\n    MOVIE_VIDEOS: '/movie/{movie_id}/videos',\n    MOVIE_REVIEWS: '/movie/{movie_id}/reviews',\n    MOVIE_SIMILAR: '/movie/{movie_id}/similar',\n\n}\n","import { THE_MOVIE_DB_API_KEY, API_ROOT } from './config';\n\n\nlet httpAborts = [];\n\n/**\n * TODO: Comments\n * @param {*} params \n */\nconst getParamsAsString = (params) => {\n    return Object.keys(params).map(function (key, value) {\n        return `${key}=${params[key]}`\n    }).join(\"&\");\n}\n\n/**\n * \n */\nconst abortCancelers = () => {\n    // Cancel all calls including signal canceler \n    httpAborts.map(httpAbort => httpAbort.abort());\n}\n\n/**\n * @return signal\n */\nconst addNewCanceler = () => {\n    //  Create new canceler \n    const newHttpAbort = new AbortController();\n    // Add a new on to stack \n    httpAborts.push(newHttpAbort);\n\n    return newHttpAbort.signal;\n}\n\n\nconst getMatchingGroups = (endPoint) => {\n    const regex = /\\{(.*?)\\}/g\n    let matchingGroups = []\n    let match;\n    while (match = regex.exec(endPoint)) {\n        matchingGroups.push({\n            stringToReplace: match[0],\n            param: match[1]\n        });\n    }\n    return matchingGroups;\n};\n\n\n\n/**\n * TODO:comments\n */\nconst genericHttpCall = (endPoint, params = {}, options = {}) => {\n\n    let fetchOpt = {};\n    if (options.includeCanceler) {\n        // Abort all http calls with includeCanceler\n        abortCancelers();\n        // Add new canceler \n        const signal = addNewCanceler();\n        //  add signal to fetch opts \n        fetchOpt['signal'] = signal;\n    }\n\n    //  Get parameters from endpoint that match to template {test}\n    const matchingGroups = getMatchingGroups(endPoint);\n\n    matchingGroups.forEach((group) => {\n        //  check if template parameters exist on params object input \n        if (params[group.param]) {\n            //  Change endpoint template with the parameter actual value\n            endPoint = endPoint.replace(group.stringToReplace, params[group.param]);\n            //  Remove it for params object\n            delete params[group.param]\n            //  console.log(`Parameter: ${group.param} exist on template endpoint: ${endPoint}`)\n        }\n        else {\n            //  TODO: return promise rejection \n            console.error(`parameter: '${group.param}' is required on request: ${endPoint}`)\n        }\n    });\n\n\n    // Add api_key parameter\n    params['api_key'] = THE_MOVIE_DB_API_KEY;\n    // Convert object parameters to string\n    const urlParameters = getParamsAsString(params);\n\n    return fetch(`${API_ROOT}${endPoint}?${urlParameters}`, fetchOpt)\n        .then(response => response.json())\n        .catch(error => error.json());\n\n}\n\nexport default genericHttpCall;","import { API_ENDPOINTS } from './config';\nimport genericHttpCall from './httpHelper.service';\n\n\n/**\n * \n * @param {*} page \n */\nexport const getNowPlayingMoviesPaged = ({page}) => {\n    return genericHttpCall(API_ENDPOINTS.MOVIES_NOW_PLAYING, {page});\n}\n\n/**\n * TODO: COMMENTS\n */\nexport const getGenreList = () => {\n    return genericHttpCall(API_ENDPOINTS.GENRE_LIST);\n}\n\n/**\n * \n * @param {*} query \n * @param {*} page \n */\nexport const searchMovie = ({query, page}) =>{\n    return genericHttpCall(API_ENDPOINTS.SEARCH, {query, page}, {includeCanceler: true})\n} \n\nexport const getMovieDetails = (movie_id) => {\n    return genericHttpCall(API_ENDPOINTS.MOVIE, {movie_id})\n}\n\nexport const getMovieVideos = (movie_id) => {\n    return genericHttpCall(API_ENDPOINTS.MOVIE_VIDEOS, {movie_id})\n}\n\nexport const getMovieReviews = (movie_id) => {\n    return genericHttpCall(API_ENDPOINTS.MOVIE_REVIEWS, {movie_id})\n}\n\nexport const getMovieSimilar = ({movie_id, page}) => {\n    return genericHttpCall(API_ENDPOINTS.MOVIE_SIMILAR, {movie_id, page})\n}","\nexport const EVENTS = {\n    GENRE_LIST_RECEIVED: 'GENRE_LIST_RECEIVED'\n}\n\nclass StoreManager {\n\n    constructor() {\n        this.emitters = {};\n        this.data = {};\n    }\n\n    emit = (event, data, log) => {\n        if (log) {\n            console.log(event, data)\n        }\n\n        // Store event data \n        this.data[event] = data;\n        if (this.emitters[event] == null) {\n            return;\n        }\n        this.emitters[event].map(callback => callback(data));\n    }\n\n    onStoreChange = (event, callback) => {\n        if (!this.emitters[event]) {\n            this.emitters[event] = [];\n        }\n        // Store emitter callback\n        this.emitters[event].push(callback);\n        // Execute callback  if exist data\n        if(this.data[event]){\n            callback(this.data[event]);\n        }\n        //  Return data anyway\n        return this.data[event];\n    }\n\n    destroyStore = (event) => {\n        delete this.emitters[event];\n    }\n}\n\nconst store = new StoreManager();\n\nexport default store;","class ElementPosition {\n\n    /**\n     * \n     * @param {*} position \n     */\n    constructor(position) {\n        this.setPosition(position);\n    }\n\n    /**\n     * \n     * @param {*} position \n     */\n    setPosition({ top, bottom, right, left, width, height }) {\n        this.top = top;\n        this.bottom = bottom;\n        this.right = right;\n        this.left = left;\n        this.width = width;\n        this.height = height;\n    }\n}\n\nexport default ElementPosition;","\nclass Movie {\n\n\n    /**\n     * \n     *\n     *  @param {*} movie \n     */\n    constructor(movie) {\n        const { backdrop_path, genre_ids, id,\n            title, vote_average, overview, release_date, poster_path } = movie;\n        this.data = movie;\n        this.backdropPath = backdrop_path != null? backdrop_path: poster_path;\n        this.genreIds = genre_ids;\n        this.id = id;\n        this.title = title;\n        this.voteAverage = vote_average;\n        this.overview = overview;\n        this.releaseDate = release_date;\n        this.posterPath = poster_path;\n\n    }\n\n    getCover() {\n        return `https://image.tmdb.org/t/p/w1400_and_h450_face/${this.backdropPath}`;\n    }\n    getMdPoster() {\n        return `https://image.tmdb.org/t/p/w500_and_h282_face/${this.backdropPath}`;\n    }\n\n    getPreviewPoster() {\n        return `https://image.tmdb.org/t/p/w116_and_h174_face/${this.posterPath}`;\n    }\n\n    getOverviewDesc() {\n        const MAX_OVERVIEW_DESC = 50;\n        const showMore = this.overview && this.overview.length > MAX_OVERVIEW_DESC ? \"...\":\"\";\n        const shortContent = this.overview && this.overview.substring(0, MAX_OVERVIEW_DESC);\n        return shortContent + showMore;\n    }\n    getHumanDate(){\n        return this.releaseDate;\n    }\n}\n\nexport default Movie;\n\n","import React, { Component } from 'react';\n\nimport './movieListItem.component.style.scss';\nimport store, { EVENTS } from '../../services/store.service';\nimport ElementPosition from '../../services/models/elementPosition.model';\nimport Movie from '../../services/models/movie.model';\nimport PropTypes from 'prop-types';\n\n/**\n * Name: MovieListItemGhost\n * Description:  Empty movie list item for loading view\n */\nexport const MovieListItemGhost = () => {\n    return (\n        <div className=\"mv-masonry-grid mv-masonry-sm\">\n            <div className=\"mv-card  mv-card-sm mv-card-ghost\">\n                <div className=\"mv-card-poster\"></div>\n                <div className=\"mv-card-content\">\n                    <div className=\"title\"></div>\n                    <div className=\"genre\"></div>\n                </div>\n                <div className=\"mv-card-footer\"></div>\n            </div>\n        </div>\n    )\n}\n\n/**\n * Name: MovieListItem\n * Description: MovieListItem is responsible for the movie representation\n */\nclass MovieListItem extends Component {\n\n\n    state = {\n        genreNames: []\n    }\n\n    componentDidMount() {\n        store.onStoreChange(EVENTS.GENRE_LIST_RECEIVED,\n            (data) => {\n                this.setGenreNames(data)\n            })\n    }\n\n\n    handleCardClick = (e) => {\n        this.props.onMovieSelect(this.props.movie, this.getOffset(e.currentTarget));\n    }\n\n    setGenreNames(genreList) {\n        const { genreIds } = this.props.movie;\n        const genreNames = genreList.filter((genre) => {\n            return genreIds.includes(genre.id);\n        }).map(genre => genre.name);\n        this.setState({ genreNames });\n    }\n\n    getOffset = (el) => {\n        const rect = el.getBoundingClientRect();\n        return new ElementPosition({\n            top: rect.top,\n            left: rect.left,\n            right: rect.left + el.offsetWidth,\n            bottom: rect.top + el.offsetHeight,\n            width: el.offsetWidth,\n            height: el.offsetHeight\n        })\n    }\n\n    render() {\n\n        const {size, movie} = this.props;\n        const genre = this.state.genreNames.join(\", \");\n\n        return (\n            <div\n                className={`mv-masonry-grid mv-masonry-${size}`} title={movie.overview}>\n                <div\n                    onClick={this.handleCardClick}\n                    className={`mv-card  mv-card-${size}`}>\n                    <div className=\"mv-card-poster\"\n                        style={{ backgroundImage: `url(${movie.getMdPoster()})` }}>\n                    </div>\n                    <div className=\"mv-card-content\">\n                        <div className=\"title\">\n                            {movie.title}\n                        </div>\n                        <div className=\"genre\">\n                            {genre}\n                        </div>\n                        <div className=\"overview\">\n                            {movie.getOverviewDesc()}\n                        </div>\n                    </div>\n                    <div className=\"mv-card-footer\">\n                        <div className=\"md-block-left\">\n                            {movie.getHumanDate()}\n                        </div>\n                        <div className=\"md-block-right text-right\">\n                            Rate: {movie.voteAverage}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nMovieListItem.propTypes = {\n    size: PropTypes.string,\n    onMovieSelect: PropTypes.func.isRequired,\n    movie: PropTypes.instanceOf(Movie)\n}\n\n\nexport default MovieListItem;","\nconst MAX_REVIEW_CONTENT = 250;\nclass Review {\n    constructor({ author, content, id, url }) {\n        this.author = author;\n        this.content = content;\n        this.id = id;\n        this.url = url;\n    }\n    getReviewDescription() {\n        return this.content && this.content.substring(0, MAX_REVIEW_CONTENT);\n    }\n\n    canShowMore() {\n        return this.content && this.content.length > MAX_REVIEW_CONTENT;\n    }\n}\n\nexport default Review;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Review from '../../services/models/review.model';\nimport './movieReview.component.style.scss';\n\nexport const MovieReviewGhost = () => {\n    return (\n        <div className=\"md-paragraph movie-review ghost\">\n            <div className=\"movie-review-author\">\n            </div>\n            <div className=\"movie-review-content\">\n            </div>\n        </div>\n    )\n}\n\nconst MovieReview = (props) => {\n\n    const  {author, url} = props.review;\n    const review = props.review;\n  \n    return (\n        <div className=\"md-paragraph movie-review\">\n            <div className=\"movie-review-author\">\n                <i> {author}</i>\n            </div>\n            <div className=\"movie-review-content\">\n                {review.getReviewDescription()}\n                {review.canShowMore() ? (<a href={url} rel=\"noopener noreferrer\" target='_blank'>...</a>) : null}\n            </div>\n        </div>\n    )\n}\n\nMovieReview.propTypes = {\n    review: PropTypes.instanceOf(Review)\n}\n\nexport default MovieReview;","import React, { Component } from 'react';\nimport MovieReview, {MovieReviewGhost} from '../movie-review/movieReview.component';\nimport { getMovieReviews } from '../../services/httpActions.service';\nimport Review from '../../services/models/review.model';\nimport PropTypes from 'prop-types'\n\nconst VIEW_STATES = {\n    LOADING: 0,\n    SERVER_ERROR: 1,\n    NORMAL: 2,\n    NO_RESULTS: 3\n}\n\nclass MovieReviewContainer extends Component {\n\n    state = {\n        viewState: null,\n        reviews: null\n    }\n\n    componentWillMount() {\n\n        this.setState({ viewState: VIEW_STATES.LOADING });\n        getMovieReviews(this.props.movieId).then(\n            response => {\n                if (response.total_results > 0) {\n                    this.setState({ \n                        viewState: VIEW_STATES.NORMAL, \n                        reviews: response.results.map(re => new Review(re)) \n                    })\n                }\n                else {\n                    this.setState({ viewState: VIEW_STATES.NO_RESULTS })\n                }\n            }\n        ).catch(\n            error => {\n                console.log(error)\n                this.setState({ viewState: VIEW_STATES.SERVER_ERROR });\n            }\n        )\n    }\n\n\n    renderLoading = () => {\n        return (\n            <div className=\"md-paragraph\">\n                <MovieReviewGhost></MovieReviewGhost>\n            </div>\n        )\n    }\n\n    renderError = () => {\n        return (\n            <div className=\"md-paragraph\">\n                Server error..\n            </div>\n        )\n    }\n\n    renderNoResults = () => {\n        return (\n            <div className=\"md-paragraph\">\n                No reviews found for this movie.\n            </div>\n        )\n    }\n\n    renderNormal = () => {\n        const { reviews } = this.state;\n        return (\n            <React.Fragment>\n                {reviews ? reviews.map(review => (\n                    <MovieReview key={review.id} review={review}></MovieReview>)\n                ) : null}\n            </React.Fragment>\n        )\n    }\n\n    render() {\n        const { viewState } = this.state\n        if (viewState === VIEW_STATES.LOADING) {\n            return this.renderLoading();\n        }\n        if (viewState === VIEW_STATES.NO_RESULTS) {\n            return this.renderNoResults();\n        }\n        if (viewState === VIEW_STATES.SERVER_ERROR) {\n            return this.renderError();\n        }\n        if (viewState === VIEW_STATES.NORMAL) {\n            return this.renderNormal();\n        }\n    }\n}\n\nMovieReviewContainer.propTypes = {\n    movieId: PropTypes.number.isRequired\n}\n\nexport default MovieReviewContainer;","class Trailer {\n\n    constructor(trailer) {\n        const { id, key, site, type } = trailer;\n\n        this.id = id;\n        this.type = type;\n        this.site = site;\n        this.key = key;\n\n    }\n\n    isYouTubeVideo() {\n        return this.site === \"YouTube\";\n    }\n\n    isVimeoVideo() {\n        return this.site === \"Vimeo\";\n    }\n\n    getTrailerLink() {\n        if (this.isYouTubeVideo()) {\n            return `https://www.youtube.com/watch?v=${this.key}`;\n        }\n        if (this.isVimeoVideo()) {\n            return `https://vimeo.com/${this.key}`;\n        }\n    }\n\n    getTrailerThumb() {\n        if (this.isYouTubeVideo()) {\n            return `http://i3.ytimg.com/vi/${this.key}/hqdefault.jpg`\n        }\n        if (this.isVimeoVideo()) {\n            return `http://b.vimeocdn.com/ts/487/543/${this.key}.jpg`;\n        }\n    }\n\n}\n\nexport default Trailer;","import React from 'react';\nimport './movieTrailer.component.style.scss'\nimport playerImg from '../../images/baseline-play_circle_filled-24px.svg'\nimport Trailer from '../../services/models/trailer.model';\nimport PropTypes from 'prop-types';\n\nexport const MovieTrailerGhost = () => {\n    return (\n        <div className=\"movie-trailer ghost\">\n        </div>\n    )\n}\n\nconst MovieTrailer = (props) => {\n\n    const trailer = props.trailer;\n\n    return (\n        <div className=\"movie-trailer\" style={{ backgroundImage: `url(${trailer.getTrailerThumb()})` }}>\n            <div className=\"overlay\"></div>\n            <div className=\"content\">\n                <a href={trailer.getTrailerLink()} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img src={playerImg} alt=\"play video\" />\n                </a>\n            </div>\n        </div>\n    )\n\n}\n\nMovieTrailer.propTypes = {\n    trailer: PropTypes.instanceOf(Trailer)\n}\n\nexport default MovieTrailer;\n\n","import React, { Component } from 'react';\nimport { getMovieVideos } from '../../services/httpActions.service';\nimport MovieTrailer, { MovieTrailerGhost } from '../movie-trailer/movieTrailer.component';\nimport PropTypes from 'prop-types';\nimport Trailer from '../../services/models/trailer.model';\nimport \"./movieTrailerContainer.component.style.scss\"\n\nconst VIEW_STATES = {\n    LOADING: 0,\n    SERVER_ERROR: 1,\n    NORMAL: 2,\n    NO_RESULTS: 3\n}\n\nclass MovieTrailerContainer extends Component {\n\n    state = {\n        viewState: null,\n        trailers: null,\n        trailerToShowIndex: 2,\n        canShowMore: false\n    }\n\n    componentWillMount() {\n\n        this.setState({ viewState: VIEW_STATES.LOADING })\n        getMovieVideos(this.props.movieId).then(\n            response => {\n                if (response.results && response.results.length === 0) {\n                    return this.setState({ viewState: VIEW_STATES.NO_RESULTS })\n                }\n\n                let canShowMore;\n                if (response.results && response.results.length > this.state.trailerToShowIndex) {\n                    canShowMore = true;\n                }\n                return this.setState({\n                    viewState: VIEW_STATES.NORMAL,\n                    trailers: response.results.map(tr=> new Trailer(tr)),\n                    canShowMore\n                })\n            }\n        ).catch(\n            error => {\n                return this.setState({ viewState: VIEW_STATES.SERVER_ERROR })\n            }\n        )\n    }\n\n    showAll = () => {\n        const { trailers } = this.state;\n        const newState = {\n            canShowMore: false,\n            trailerToShowIndex: trailers.length\n        }\n        this.setState(newState)\n    }\n\n    renderLoading = () => {\n        //  Preview on ghost movie trailer\n        return (\n            <MovieTrailerGhost></MovieTrailerGhost>\n        );\n    }\n\n\n    renderNormal = () => {\n        const { trailers, canShowMore, trailerToShowIndex } = this.state;\n        return (\n            <React.Fragment>\n\n                <div className=\"movie-trailer-container\">\n                    {trailers ? trailers.slice(0, trailerToShowIndex).map(trailer => (\n                        <MovieTrailer trailer={trailer} key={trailer.id}></MovieTrailer>\n                    )\n                    ) : null}\n                </div>\n                <div className=\"clear-fix\"></div>\n                <div className=\"md-container\">\n                    {canShowMore ? (<button className=\"md-button-primary\" onClick={this.showAll}>Show all</button>) : null}\n                </div>\n\n            </React.Fragment>\n\n\n        );\n    }\n\n    renderError = () => {\n        return (<div className=\"md-paragraph\">Server error</div>);\n    }\n\n    renderNoResults = () => {\n        return (<div className=\"md-paragraph\">No video trails for this movie</div>);\n\n    }\n\n    render() {\n        const { viewState } = this.state\n        if (viewState === VIEW_STATES.LOADING) {\n            return this.renderLoading();\n        }\n        if (viewState === VIEW_STATES.NO_RESULTS) {\n            return this.renderNoResults();\n        }\n        if (viewState === VIEW_STATES.SERVER_ERROR) {\n            return this.renderError();\n        }\n        if (viewState === VIEW_STATES.NORMAL) {\n            return this.renderNormal();\n        }\n        return;\n    }\n}\n\nMovieTrailerContainer.propTypes = {\n    movieId: PropTypes.number.isRequired\n}\n\nexport default MovieTrailerContainer;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Movie from '../../services/models/movie.model';\nimport ElementPosition from '../../services/models/elementPosition.model';\n\n\nimport MovieReviewContainer from '../movie-review-container/movieReviewContainer.component';\nimport MovieListContainer, { FETCH_TYPES } from '../movie-list-container/movieListContainer.component';\nimport { getMovieSimilar } from '../../services/httpActions.service';\nimport MovieTrailerContainer from '../movie-trailer-container/movieTrailerContainer.component';\nimport backIcon from '../../images/baseline-keyboard_arrow_left-24px.svg'\nimport './movieDetails.component.style.scss';\n\nconst FULL_WIDTH_POSITION = {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n}\n\nclass MovieDetails extends Component {\n\n    state = {\n        position: null,\n        starterPosition: null,\n        movie: null,\n        isFullScreen: false\n    }\n\n    timerAnimationIn = null;\n\n    timerAnimationOut = null;\n\n    componentWillMount() {\n\n        this.setState({\n            starterPosition: this.props.starterPosition,\n            position: this.props.starterPosition,\n            movie: this.props.movie\n\n        })\n\n        this.timerAnimationIn = setTimeout(() => this.setState({\n            position: new ElementPosition(FULL_WIDTH_POSITION),\n            isFullScreen: true\n        }))\n    }\n\n    componentWillUnmount() {\n        //  Clear animation timers\n        clearTimeout(this.timerAnimationIn);\n        clearTimeout(this.timerAnimationOut);\n    }\n\n\n    handleClose = (e) => {\n        this.setState({\n            position: this.state.starterPosition,\n            isFullScreen: false\n        })\n        this.timerAnimationOut = setTimeout(() => this.props.onMovieDetailsClose(), 200);\n\n    }\n\n    handleOnScroll = (e) => {\n        const { scrollHeight, scrollTop, clientHeight } = e.currentTarget;\n        if (scrollHeight - scrollTop === clientHeight) {\n            if (this.movieList) {\n                this.movieList.getNextPage();\n            }\n        }\n    }\n\n\n    render() {\n        const { position, movie, isFullScreen } = this.state;\n        const posterCoverSrc = movie.getCover();\n        const posterPreviewSrc = movie.getPreviewPoster();\n        return (\n            <div\n                style={position}\n                className=\"mv-details-container\">\n\n                <div className=\"md-page-container\" onScroll={this.handleOnScroll}>\n\n                    <div className=\"mv-details-header\">\n                        <div className=\"md-container\">\n                            <button className=\"md-button\" onClick={this.handleClose}>\n                                <img src={backIcon} alt=\"back\" />\n\n                            </button>\n                            <div className=\"mv-details-header-title\">\n                                {movie.title}\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        className=\"mv-details-poster\"\n                        style={{ backgroundImage: `url(${posterCoverSrc})` }}>\n                    </div>\n                    <div className=\"md-container mv-details-content-card\">\n\n                        <div className={`mv-details-movie-content ${isFullScreen ? 'show' : 'hide'}`}>\n                            <div className=\"md-container no-gutters\">\n                                <div className=\"poster-preview-container\">\n                                    <img src={posterPreviewSrc} alt={movie.title} />\n                                </div>\n\n                                <div className=\"md-title\">\n                                    {movie.title}\n                                </div>\n                                <div className=\"md-sub-title\">\n                                    Overview\n                                </div>\n                                <div className=\"md-paragraph\">\n                                    {movie.overview}\n                                </div>\n\n                                <div className=\"md-paragraph sub-info\">\n                                    {movie.getHumanDate()}, Rating {movie.voteAverage}\n                                </div>\n\n\n                                <div className=\"md-sub-title\">\n                                    Trailers\n                                </div>\n                                <div className=\"horizontal-container\">\n                                    <MovieTrailerContainer movieId={movie.id}></MovieTrailerContainer>\n                                </div>\n                                <div className=\"md-sub-title\">\n                                    Reviews\n                                </div>\n                                <div>\n                                    <MovieReviewContainer movieId={movie.id}></MovieReviewContainer>\n                                </div>\n                                <div className=\"md-sub-title\">\n                                    Similar movies\n                                </div>\n                            </div>\n                            <MovieListContainer\n                                fetchType={FETCH_TYPES.SIMILAR_MOVIES}\n                                fetchFunc={getMovieSimilar}\n                                fetchParams={{ movie_id: movie.id }}\n                                onRef={ref => (this.movieList = ref)}></MovieListContainer>\n\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nMovieDetails.propTypes = {\n    movie: PropTypes.instanceOf(Movie),\n    starterPosition: PropTypes.instanceOf(ElementPosition),\n    onMovieDetailsClose: PropTypes.func.isRequired\n}\n\nexport default MovieDetails;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport MovieListItem, { MovieListItemGhost } from '../movie-list-item/movieListItem.component';\nimport MovieDetails from '../movie-details/movieDetails.component';\nimport Movie from '../../services/models/movie.model';\n\n// Export fetch types\nexport const FETCH_TYPES = {\n    SEARCH: 'SEARCH',\n    NOW_PLAYING: 'NOW_PLAYING',\n    SIMILAR_MOVIES: 'SIMILAR_MOVIES',\n}\n\n/**\n * Available view states\n */\nconst VIEW_STATES = {\n    NORMAL_VIEW: 0,\n    LOADING: 1,\n    SERVER_ERROR: 4,\n    NO_RESULTS: 5\n}\n\n/**\n * Inital state\n */\nconst INITIAL_STATE = {\n    viewState: VIEW_STATES.NOW_PLAYING_VIEW,\n    currentPage: 1,\n    totalPages: null,\n    totalResults: null,\n    query: '',\n    similarMovieId: null,\n    movies: [],\n    selectedMovie: null,\n    selectedMoviePosition: null\n\n}\n\nconst GRID_LAYOUT_PATTERN = [\n    'lg',\n    'sm',\n    'sm',\n    'sm',\n    'sm',\n    'sm',\n    'md'\n];\n\n/**\n * \n * Name: MovieListContainer\n * Description: This Component is responsible for movie list \n * representation \n * \n */\n\n \nclass MovieListContainer extends Component {\n\n\n    //  Set up initial state\n    state = INITIAL_STATE;\n\n\n\n    // On component mount execute http request\n    componentDidMount() {\n        this.props.onRef(this)\n        this.fetchDate();\n    }\n\n    componentWillUnmount() {\n        this.props.onRef(null)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState(INITIAL_STATE, () => this.fetchDate());\n    }\n\n    // This function execute http request\n    fetchDate = () => {\n\n        this.setState({ viewState: VIEW_STATES.LOADING });\n        const params = { ...this.props.fetchParams, page: this.state.currentPage }\n        this.props.fetchFunc(params)\n            .then(this.handleFetchSuccess)\n            .catch(this.handleFetchError)\n\n\n    }\n\n    handleFetchSuccess = response => {\n\n        if (response.total_results === 0) {\n            return this.setState({ viewState: VIEW_STATES.NO_RESULTS })\n        }\n\n        const movies = [\n            ...this.state.movies, \n            ...response.results.map(res=> new Movie(res))];\n\n        this.setState({\n            movies,\n            totalResults: response.total_results,\n            totalPages: response.total_pages,\n            viewState: VIEW_STATES.NORMAL_VIEW\n        })\n    }\n\n    handleFetchError = error => {\n        this.setState({\n            viewState: VIEW_STATES.SERVER_ERROR\n        })\n    }\n\n    //  Increase currentPage and execute http fetchDate\n    getNextPage = () => {\n\n        //  Check if exist next page first\n        const { totalPages, currentPage } = this.state;\n        if (totalPages && currentPage >= totalPages) {\n            //  No results to show\n            return;\n        }\n        //  Set currentPage on state and execute fetchDate \n        this.setState((state, props) => ({\n            currentPage: state.currentPage + 1,\n        }), () => {\n            this.fetchDate();\n        })\n    }\n\n    // Handle load more movies\n    handleLoadMore = (e) => {\n        this.getNextPage();\n    }\n\n    getMovieSizeFromPattern = (index) => {\n        const quotient = (index % GRID_LAYOUT_PATTERN.length);\n        return GRID_LAYOUT_PATTERN[quotient];\n    }\n\n    onMovieSelect = (movie, moviePosition) => {\n        this.setState({\n            selectedMovie: movie,\n            selectedMoviePosition: moviePosition\n        })\n    }\n\n    deselectMovie = () => {\n        this.setState({\n            selectedMovie: INITIAL_STATE.selectedMovie,\n            selectedMoviePosition: INITIAL_STATE.selectedMoviePosition\n        })\n    }\n\n    renderSelectedMovie = () => {\n        const { selectedMovie, selectedMoviePosition } = this.state;\n        if (selectedMovie !== null) {\n            return (\n                <MovieDetails\n                    movie={selectedMovie}\n                    starterPosition={selectedMoviePosition}\n                    onMovieDetailsClose={this.deselectMovie}>\n                </MovieDetails>\n            )\n        }\n        return null;\n    }\n\n    renderGhostLoading = (isLoading) => {\n        if (isLoading) {\n            return (GRID_LAYOUT_PATTERN.map((size, key) => (\n                <MovieListItemGhost key={key}></MovieListItemGhost>))\n            )\n        }\n        return null;\n    }\n    \n    renderNormal = (isLoading) => {\n\n        const { movies } = this.state;\n\n        return (\n            <React.Fragment>\n\n                {this.renderSelectedMovie()}\n\n                <div className=\"md-container no-gutters\">\n                    <div className=\"md-list\">\n                        {movies.map(\n                            (movie, key) => {\n                                return (\n                                    <MovieListItem\n                                        onMovieSelect={this.onMovieSelect}\n                                        size={this.getMovieSizeFromPattern(key)}\n                                        movie={movie}\n                                        key={key}></MovieListItem>\n                                )\n                            }\n                        )}\n\n                        {this.renderGhostLoading(isLoading)}\n\n\n                        <div className=\"clear-fix\"></div>\n                    </div>\n                </div>\n                {isLoading ? (<div className=\"text-center\">\n                    <button className=\"md-button\" onClick={this.handleLoadMore}>Loading...</button>\n                </div>) : null}\n\n            </React.Fragment>\n\n        );\n    }\n    renderServerError = () => {\n        return (\n            <div className=\"md-container no-gutters\">\n                <div className=\"md-paragraph\">\n                    Server Error! Something went wrong. Please try again later..\n                </div>\n            </div>\n        )\n    }\n    renderNoResults = () => {\n        return (\n            <div className=\"md-container no-gutters\">\n                <div className=\"md-paragraph\">\n                    No results Found...\n                </div>\n            </div>\n        )\n    }\n\n\n    render() {\n\n        const { viewState } = this.state;\n\n        // Server error state\n        if (viewState === VIEW_STATES.SERVER_ERROR) {\n            return this.renderServerError()\n        }\n        // No results state\n        if (viewState === VIEW_STATES.NO_RESULTS) {\n            return this.renderNoResults();\n        }\n\n        // Normal state\n        return this.renderNormal(viewState === VIEW_STATES.LOADING);\n    }\n}\n\nMovieListContainer.propTypes = {\n    fetchType: PropTypes.string,\n    fetchFunc: PropTypes.func.isRequired,\n    fetchParams: PropTypes.object\n}\n\n\nexport default MovieListContainer;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './searchBox.component.style.scss';\n\nconst DELAY = 600;\n\n/**\n * Name: SearchBox\n * Description: Search box is responsible to handle input changes\n */\nclass SearchBox extends Component {\n\n    state = {\n        searchQuery: \"\"\n    }\n\n    timer;\n\n    componentWillUnmmount(){\n        clearTimeout(this.timer);\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        clearTimeout(this.timer);\n        this.notifyOnQueryChange();\n    }\n\n    handleOnChange = (e) => {\n\n        clearTimeout(this.timer);\n        this.setState({\n            searchQuery: e.target.value\n        }, () => this.timer = setTimeout(this.notifyOnQueryChange, DELAY))\n    }\n\n    notifyOnQueryChange = () => {\n        this.props.onQueryChange(this.state.searchQuery);\n    }\n\n    render() {\n        const { searchQuery } = this.state;\n        return (\n            <form className=\"search-box-form\" onSubmit={this.handleSubmit}>\n\n                <input\n                    className=\"md-input search-box\"\n                    autoComplete=\"off\"\n                    placeholder=\"Search for a movie, tv show, person...\"\n                    onChange={this.handleOnChange}\n                    type=\"text\"\n                    id=\"searchQuery\"\n                    value={searchQuery} />\n            </form>\n        )\n    }\n}\n\nSearchBox.propTypes = {\n    onQueryChange: PropTypes.func.isRequired\n}\n\nexport default SearchBox;","import React from 'react';\nimport './header.component.style.scss';\nimport SearchBox from '../search-box/searchBox.component';\nimport PropTypes from 'prop-types';\n\n/**\n * Name: Header\n * Description: Header component is responsible for brand name and search \n * box representation \n * @param {*} props \n */\nconst Header = (props) => {\n\n    const headerContentTemplate = (\n        <div>\n            <div className=\"brand-name\">\n                MovieRama\n            </div>\n            <SearchBox onQueryChange={props.onSearchQueryChange}></SearchBox>\n        </div>\n    )\n    return (\n        <div className=\"md-header header-component-container\">\n            {headerContentTemplate}\n            <div className=\"md-header-content-fixed header-component-container-fixed\">\n                <div className=\"md-container\">\n                    {headerContentTemplate}\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nHeader.propTypes = {\n    onSearchQueryChange: PropTypes.func.isRequired\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { getNowPlayingMoviesPaged, searchMovie } from '../../services/httpActions.service';\nimport MovieListContainer, { FETCH_TYPES } from '../../components/movie-list-container/movieListContainer.component'\nimport Header from '../../components/header/header.component';\n\nclass DashBoardPage extends Component {\n\n    state = {\n        movieQuery: '',\n        isSearchView: false\n    }\n\n    handleOnQueryChange = (movieQuery) => {\n\n        const isSearchView = movieQuery != null && movieQuery !== \"\";\n\n        this.setState({ movieQuery, isSearchView });\n    }\n\n\n    handleOnScroll = (e) => {\n        const { scrollHeight, scrollTop, clientHeight } = e.currentTarget;\n        if (scrollHeight - scrollTop === clientHeight) {\n            if (this.movieList && typeof this.movieList.getNextPage === \"function\") {\n                this.movieList.getNextPage()\n            }\n        }\n    }\n\n    renderSearchResults = () => {\n        const { movieQuery } = this.state;\n        return (\n            <React.Fragment>\n                <div className=\"md-container no-gutters\">\n                    <div className=\"md-sub-title\">\n                        Search for <i>'{movieQuery}'</i>\n                    </div>\n                </div>\n                <MovieListContainer\n                    fetchType={FETCH_TYPES.SEARCH}\n                    fetchFunc={searchMovie}\n                    fetchParams={{ query: movieQuery }}\n                    onRef={ref => (this.movieList = ref)}></MovieListContainer>\n            </React.Fragment>)\n    }\n\n    renderNowPlaying = () => {\n        return (\n            <React.Fragment>\n                <div className=\"md-container no-gutters\">\n                    <div className=\"md-sub-title\">Now In Theaters</div>\n                </div>\n                <MovieListContainer\n                    fetchType={FETCH_TYPES.NOW_PLAYING}\n                    fetchFunc={getNowPlayingMoviesPaged}\n                    fetchParams={{}}\n                    onRef={ref => (this.movieList = ref)}></MovieListContainer>\n            </React.Fragment>\n        )\n    }\n\n    render() {\n\n        const { isSearchView } = this.state;\n        return (\n            <div className=\"md-page-container\" onScroll={this.handleOnScroll}>\n                <Header onSearchQueryChange={this.handleOnQueryChange}></Header>\n\n                {isSearchView === true ? this.renderSearchResults() : null}\n                {isSearchView === false ? this.renderNowPlaying() : null}\n            </div>\n        )\n    }\n}\n\nexport default DashBoardPage;","import React, { Component } from 'react';\n\nimport DashBoardPage from './pages/dashboard/dashboard.page.js';\nimport {getGenreList} from './services/httpActions.service';\nimport store, { EVENTS } from './services/store.service';\n/**\n * Name: App\n * Description: App is main component \n */\nclass App extends Component {\n\n  componentDidMount() {\n    getGenreList().then(response => {\n      store.emit(EVENTS.GENRE_LIST_RECEIVED, response.genres);\n    })\n  }\n\n  render() {\n\n    return (\n      <React.Fragment>\n        <DashBoardPage></DashBoardPage>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}